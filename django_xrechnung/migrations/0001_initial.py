# Generated by Django 5.2.6 on 2025-09-23 07:50

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='XRechnungInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(help_text='Unique invoice number', max_length=100, unique=True)),
                ('invoice_date', models.DateField(help_text='Date when the invoice was issued')),
                ('due_date', models.DateField(blank=True, help_text='Payment due date', null=True)),
                ('supplier_name', models.CharField(help_text='Name of the supplier/seller', max_length=200)),
                ('supplier_tax_id', models.CharField(blank=True, help_text='Tax identification number of the supplier', max_length=50)),
                ('buyer_name', models.CharField(help_text='Name of the buyer/customer', max_length=200)),
                ('buyer_tax_id', models.CharField(blank=True, help_text='Tax identification number of the buyer', max_length=50)),
                ('total_amount', models.DecimalField(decimal_places=2, help_text='Total invoice amount including tax', max_digits=12)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, help_text='Total tax amount', max_digits=12)),
                ('net_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Net amount before tax', max_digits=12, null=True)),
                ('currency', models.CharField(default='EUR', help_text='Currency code (ISO 4217)', max_length=3, validators=[django.core.validators.RegexValidator('^[A-Z]{3}$', 'Currency must be a 3-letter ISO code')])),
                ('xml_content', models.TextField(blank=True, help_text='XML content of the XRechnung')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'XRechnung Invoice',
                'verbose_name_plural': 'XRechnung Invoices',
                'ordering': ['-invoice_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='XRechnungLineItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveIntegerField(help_text='Position number of this line item')),
                ('description', models.CharField(help_text='Description of the product or service', max_length=500)),
                ('quantity', models.DecimalField(decimal_places=3, default=1, help_text='Quantity of items', max_digits=10)),
                ('unit_price', models.DecimalField(decimal_places=2, help_text='Price per unit', max_digits=10)),
                ('line_total', models.DecimalField(blank=True, decimal_places=2, help_text='Total amount for this line item', max_digits=12, null=True)),
                ('tax_rate', models.DecimalField(decimal_places=2, default=19.0, help_text='Tax rate as percentage (e.g., 19.00 for 19%)', max_digits=5)),
                ('invoice', models.ForeignKey(help_text='Associated invoice', on_delete=django.db.models.deletion.CASCADE, related_name='line_items', to='django_xrechnung.xrechnunginvoice')),
            ],
            options={
                'verbose_name': 'XRechnung Line Item',
                'verbose_name_plural': 'XRechnung Line Items',
                'ordering': ['position'],
                'unique_together': {('invoice', 'position')},
            },
        ),
    ]
